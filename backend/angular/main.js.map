{"version":3,"sources":["./src/app/posts/post-list/post-list.component.html","./src/app/posts/post-list/post-list.component.ts","./src/app/posts/posts.module.ts","./src/app/posts/post.service.ts","./src/environments/environment.ts","./src/app/auth/auth.guard.ts","./src/app/error-interceptor.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/header/header.component.html","./src/app/header/header.component.ts","./src/app/posts/post-create/mime-type.validator.ts","./src/app/error/error/error.component.ts","./src/app/error/error/error.component.html","./src/app/auth/auth-interceptor.ts","./src/app/app.routing.module.ts","./src/app/auth/auth.service.ts","./src/app/angular-material.module.ts","./src/app/posts/post-create/post-create.component.ts","./src/app/posts/post-create/post-create.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n<mat-accordion *ngIf=\"posts.length>0 && !isLoading else noPosts\">\n  <mat-expansion-panel *ngFor=\"let post of posts  \">\n    <mat-expansion-panel-header>\n      {{post.title}}\n    </mat-expansion-panel-header>\n    <div class=\"post-image\">\n      <img [src]=\"post.imagePath\" [alt]=\"post.title\">\n    </div>\n    <p>{{post.content}}</p>\n    <mat-action-row *ngIf=\"userIsAuthenticated && userId== post.creator\">\n      <a [routerLink]=\"['/edit', post._id]\" mat-button color=\"primary\">Edit</a>\n      <button mat-button color=\"warn\" (click)=\"onDeletePost(post._id)\">Delete</button>\n    </mat-action-row>\n  </mat-expansion-panel>\n</mat-accordion>\n<mat-paginator [length]=\"totalPosts\" [pageSize]=\"postsPerPage\" [pageSizeOptions]=\"pageSizeOptions\"\n  (page)=\"onChangedPage($event)\" *ngIf=\"posts.length>0\"></mat-paginator>\n<ng-template #noPosts>\n  <p class=\"mat-body-1 info-text\">No Posts</p>\n\n</ng-template>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { PageEvent } from \"@angular/material/paginator\";\nimport { Subscription } from \"rxjs\";\nimport { AuthService } from \"src/app/auth/auth.service\";\nimport { Post } from \"../post.model\";\nimport { PostsService } from \"../post.service\";\n\n@Component({\n  selector: \"app-post-list\",\n  templateUrl: \"./post-list.component.html\",\n  styleUrls: [\"./post-list.component.css\"],\n})\nexport class PostListComponent implements OnInit, OnDestroy {\n  constructor(\n    public postsService: PostsService,\n    private authService: AuthService\n  ) {}\n  posts: Post[] = [];\n  isLoading = false;\n  totalPosts = 0;\n  postsPerPage = 2;\n  currentPage = 1;\n  pageSizeOptions = [1, 2, 5, 10];\n  private postsSub: Subscription;\n  private authStatusSub: Subscription;\n  userIsAuthenticated = false;\n  userId: string;\n\n  onDeletePost(id: string) {\n    this.isLoading = true;\n    this.postsService.deletePost(id).subscribe(\n      () => {\n        this.postsService.getPosts(this.postsPerPage, this.currentPage);\n      },\n      () => {\n        this.isLoading = false;\n      }\n    );\n  }\n  onChangedPage(pageData: PageEvent) {\n    this.isLoading = true;\n    this.currentPage = pageData.pageIndex + 1;\n    this.postsPerPage = pageData.pageSize;\n    this.postsService.getPosts(this.postsPerPage, this.currentPage);\n  }\n  ngOnInit(): void {\n    this.isLoading = true;\n    this.postsService.getPosts(this.postsPerPage, this.currentPage);\n    this.userId = this.authService.getUserId();\n    this.postsSub = this.postsService\n      .getPostUpdatedListener()\n      .subscribe((postData: { posts: Post[]; postCount: number }) => {\n        this.isLoading = false;\n        this.posts = postData.posts;\n        this.totalPosts = postData.postCount;\n      });\n    this.userIsAuthenticated = this.authService.getIsAuth();\n    this.authStatusSub = this.authService\n      .getAuthStatusListener()\n      .subscribe((response) => {\n        this.userIsAuthenticated = response;\n        this.userId = this.authService.getUserId();\n      });\n  }\n  ngOnDestroy() {\n    this.postsSub.unsubscribe();\n    this.authStatusSub.unsubscribe();\n  }\n}\n","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { AngularMaterialModule } from \"../angular-material.module\";\r\n\r\nimport { PostCreateComponent } from \"./post-create/post-create.component\";\r\nimport { PostListComponent } from \"./post-list/post-list.component\";\r\n\r\n@NgModule({\r\n  declarations: [PostCreateComponent, PostListComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    RouterModule,\r\n  ],\r\n})\r\nexport class PostsModule {}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Post } from \"./post.model\";\r\nimport { Subject } from \"rxjs\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Router } from \"@angular/router\";\r\nimport { environment } from \"../../environments/environment\";\r\n\r\nconst BACKEND_URL = environment.apiUrl;\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class PostsService {\r\n  private posts: Post[] = [];\r\n  private postsUpdated = new Subject<{ posts: Post[]; postCount: number }>();\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  getPosts(postsPerPage: number, currentPage: number) {\r\n    const queryParams = `?pagesize=${postsPerPage}&page=${currentPage}`;\r\n    this.http\r\n      .get<{ msg: string; posts: Post[]; maxPosts: number }>(\r\n        `${BACKEND_URL}/posts` + queryParams\r\n      )\r\n      .subscribe((postData) => {\r\n        this.posts = postData.posts;\r\n        this.postsUpdated.next({\r\n          posts: [...this.posts],\r\n          postCount: postData.maxPosts,\r\n        });\r\n      });\r\n  }\r\n\r\n  getPostUpdatedListener() {\r\n    return this.postsUpdated.asObservable();\r\n  }\r\n  getPost(id: string) {\r\n    return this.http.get<{\r\n      _id: string;\r\n      title: string;\r\n      content: string;\r\n      imagePath: string;\r\n      creator: string;\r\n    }>(`${BACKEND_URL}/posts/${id}`);\r\n  }\r\n  addPost(title: string, content: string, image: File) {\r\n    const postData = new FormData();\r\n\r\n    postData.append(\"title\", title);\r\n    postData.append(\"content\", content);\r\n    postData.append(\"image\", image, title);\r\n\r\n    this.http\r\n      .post<{ msg: string; post: Post }>(`${BACKEND_URL}/posts`, postData)\r\n      .subscribe((responseData) => {\r\n        this.router.navigate([\"/\"]);\r\n      });\r\n  }\r\n\r\n  updatePost(\r\n    _id: string,\r\n    title: string,\r\n    content: string,\r\n    image: File | string\r\n  ) {\r\n    console.log(image);\r\n    let postData: Post | FormData;\r\n    if (typeof image === \"object\") {\r\n      postData = new FormData();\r\n      postData.append(\"_id\", _id);\r\n      postData.append(\"title\", title);\r\n      postData.append(\"content\", content);\r\n      postData.append(\"image\", image, title);\r\n      console.log(postData);\r\n    } else {\r\n      postData = {\r\n        _id,\r\n        title,\r\n        content,\r\n        imagePath: image,\r\n        creator: null,\r\n      };\r\n      console.log(postData);\r\n    }\r\n    try {\r\n      this.http\r\n        .put<{ msg: string; post: Post }>(\r\n          `${BACKEND_URL}/posts/${_id}`,\r\n          postData\r\n        )\r\n        .subscribe((response) => {\r\n          this.router.navigate([\"/\"]);\r\n        });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  }\r\n\r\n  deletePost(id: string) {\r\n    return this.http.delete(`http://localhost:3000/api/posts/${id}`);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: \"http://localhost:3000/api\",\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  Router,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n} from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { AuthService } from \"./auth.service\";\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | boolean\r\n    | UrlTree\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree> {\r\n    const isAuth = this.authService.getIsAuth();\r\n    if (!isAuth) {\r\n      this.router.navigate([\"/auth/login\"]);\r\n    }\r\n    return isAuth;\r\n  }\r\n}\r\n","import {\r\n  HttpErrorResponse,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n} from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { throwError } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\nimport { ErrorComponent } from \"./error/error/error.component\";\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  constructor(private dialog: MatDialog) {}\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    return next.handle(req).pipe(\r\n      catchError((error: HttpErrorResponse) => {\r\n        let errorMessage = \"An unknown error occurred\";\r\n        if (error.error) {\r\n          errorMessage = error.error;\r\n        }\r\n        this.dialog.open(ErrorComponent, { data: { message: errorMessage } });\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\nimport { AuthService } from \"./auth/auth.service\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"],\n})\nexport class AppComponent implements OnInit {\n  constructor(private authService: AuthService) {}\n  ngOnInit() {\n    this.authService.autoAuthUser();\n  }\n}\n","<app-header></app-header>\n<main>\n  <router-outlet></router-outlet>\n\n</main>\n","import { NgModule } from \"@angular/core\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\n\nimport { AppComponent } from \"./app.component\";\nimport { HeaderComponent } from \"./header/header.component\";\nimport { AppRoutingModule } from \"./app.routing.module\";\nimport { AuthInterceptor } from \"./auth/auth-interceptor\";\nimport { ErrorInterceptor } from \"./error-interceptor\";\nimport { ErrorComponent } from \"./error/error/error.component\";\nimport { AngularMaterialModule } from \"./angular-material.module\";\nimport { PostsModule } from \"./posts/posts.module\";\n\n@NgModule({\n  declarations: [AppComponent, HeaderComponent, ErrorComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AngularMaterialModule,\n    PostsModule,\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","<mat-toolbar color=\"primary\"> <span> <a routerLink=\"\"> My messages</a></span>\n  <span class=\"spacer\"></span>\n  <ul>\n    <li *ngIf=\"userIsAuthenticated\"><a mat-button routerLink=\"/create\" routerLinkActive=\"mat-accent\">Add new post</a>\n    </li>\n    <li *ngIf=\"!userIsAuthenticated\"><a mat-button routerLink=\"/auth/login\" routerLinkActive=\"mat-accent\">Login</a></li>\n    <li *ngIf=\"!userIsAuthenticated\"><a mat-button routerLink=\"/auth/signup\" routerLinkActive=\"mat-accent\">Signup</a>\n    </li>\n    <li *ngIf=\"userIsAuthenticated\">\n      <button mat-button (click)=\"onLogout()\">Logout</button>\n    </li>\n  </ul>\n</mat-toolbar>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\nimport { AuthService } from \"../auth/auth.service\";\n\n@Component({\n  selector: \"app-header\",\n  templateUrl: \"./header.component.html\",\n  styleUrls: [\"./header.component.css\"],\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n  constructor(private authService: AuthService) {}\n  private authListenerSubs: Subscription;\n  userIsAuthenticated = false;\n\n  onLogout() {\n    this.authService.logout();\n  }\n\n  ngOnInit(): void {\n    this.userIsAuthenticated = this.authService.getIsAuth();\n    this.authListenerSubs = this.authService\n      .getAuthStatusListener()\n      .subscribe((response) => {\n        this.userIsAuthenticated = response;\n      });\n  }\n  ngOnDestroy() {\n    this.authListenerSubs.unsubscribe();\n  }\n}\n","import { AbstractControl } from \"@angular/forms\";\r\nimport { Observable, Observer, of, scheduled } from \"rxjs\";\r\n\r\nexport const mimeType = (\r\n  control: AbstractControl\r\n): Promise<{ [key: string]: any }> | Observable<{ [key: string]: any }> => {\r\n  if (typeof control.value === \"string\") {\r\n    // tslint:disable-next-line:deprecation\r\n    return of(null);\r\n  }\r\n  const file = control.value as File;\r\n  const fileReader = new FileReader();\r\n  const frObs = Observable.create(\r\n    (observer: Observer<{ [key: string]: any }>) => {\r\n      fileReader.addEventListener(\"loadend\", () => {\r\n        const arr = new Uint8Array(fileReader.result as ArrayBuffer).subarray(\r\n          0,\r\n          4\r\n        );\r\n        let header = \"\";\r\n        let isValid = false;\r\n        for (let i = 0; i < arr.length; i++) {\r\n          header += arr[i].toString(16);\r\n        }\r\n        switch (header) {\r\n          case \"89504e47\":\r\n            isValid = true;\r\n            break;\r\n          case \"ffd8ffe0\":\r\n          case \"ffd8ffe1\":\r\n          case \"ffd8ffe2\":\r\n          case \"ffd8ffe3\":\r\n          case \"ffd8ffe8\":\r\n            isValid = true;\r\n            break;\r\n          default:\r\n            isValid = false;\r\n            break;\r\n        }\r\n        if (isValid) {\r\n          observer.next(null);\r\n        } else {\r\n          observer.next({ invaildMimeType: true });\r\n        }\r\n        observer.complete();\r\n      });\r\n      fileReader.readAsArrayBuffer(file);\r\n    }\r\n  );\r\n  return frObs;\r\n};\r\n","import { Inject } from \"@angular/core\";\nimport { Component, inject, OnInit } from \"@angular/core\";\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\n\n@Component({\n  templateUrl: \"./error.component.html\",\n})\nexport class ErrorComponent {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: { message: string }) {}\n}\n","<h1 mat-dialog-title>An Error Occurred</h1>\n<div mat-dialog-content>\n  <p class=\"mat-body-1\">\n    {{data.message}}\n\n  </p>\n\n</div>\n<div mat-dialog-actions>\n  <button mat-button mat-dialog-close>Okay</button>\n</div>\n","import {\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n} from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { AuthService } from \"./auth.service\";\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private authService: AuthService) {}\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    const authToken = this.authService.getToken();\r\n    const authRequest = req.clone({\r\n      headers: req.headers.set(\"authorization\", \"bearer \" + authToken),\r\n    });\r\n    return next.handle(authRequest);\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { AuthGuard } from \"./auth/auth.guard\";\r\nimport { PostCreateComponent } from \"./posts/post-create/post-create.component\";\r\nimport { PostListComponent } from \"./posts/post-list/post-list.component\";\r\n\r\nconst routes: Routes = [\r\n  { path: \"\", component: PostListComponent },\r\n  { path: \"create\", component: PostCreateComponent, canActivate: [AuthGuard] },\r\n  {\r\n    path: \"edit/:postId\",\r\n    component: PostCreateComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: \"auth\",\r\n    loadChildren: () => import(\"./auth/auth.module\").then((m) => m.AuthModule),\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n  providers: [AuthGuard],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Subject } from \"rxjs\";\nimport { AuthDataModel } from \"./auth-data-model\";\nimport { environment } from \"../../environments/environment\";\n\nconst BACKEND_URL = environment.apiUrl;\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthService {\n  private token: string;\n  private authStatusListener = new Subject<boolean>();\n  private isAuthenticated = false;\n  private tokenTimer: ReturnType<typeof setTimeout>;\n  private userId: string;\n  constructor(private http: HttpClient, private router: Router) {}\n\n  createUser(email: string, password: string) {\n    const user: AuthDataModel = {\n      email,\n      password,\n    };\n    try {\n      return this.http.post(`${BACKEND_URL}/users/signup`, user).subscribe(\n        () => {\n          this.router.navigate([\"/\"]);\n        },\n        (error) => {\n          this.authStatusListener.next(false);\n        }\n      );\n    } catch (error) {\n      console.error(error.message);\n    }\n  }\n  getToken() {\n    return this.token;\n  }\n  getAuthStatusListener() {\n    return this.authStatusListener.asObservable();\n  }\n  getIsAuth() {\n    return this.isAuthenticated;\n  }\n  getUserId() {\n    return this.userId;\n  }\n\n  login(email: string, password: string) {\n    const user: AuthDataModel = {\n      email,\n      password,\n    };\n    try {\n      this.http\n        .post<{ token: string; expiresIn: number; userId: string }>(\n          `${BACKEND_URL}/users/login`,\n          user\n        )\n        .subscribe(\n          (response) => {\n            const token = response.token;\n            this.token = token;\n            if (token) {\n              const expiresInDuration = response.expiresIn;\n              this.setAuthTimer(expiresInDuration);\n              this.isAuthenticated = true;\n              this.userId = response.userId;\n              this.authStatusListener.next(true);\n              const now = new Date();\n              const expirationDate = new Date(\n                now.getTime() + expiresInDuration * 1000\n              );\n              console.log(expirationDate);\n              this.saveAuthData(token, expirationDate, this.userId);\n              this.router.navigate([\"/\"]);\n            }\n          },\n          (error) => {\n            this.authStatusListener.next(false);\n          }\n        );\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  autoAuthUser() {\n    const authInformation = this.getAuthData();\n    if (!authInformation) {\n      return;\n    }\n    const now = new Date();\n    const expiresIn = authInformation.expirationDate.getTime() - now.getTime();\n    if (expiresIn > 0) {\n      this.token = authInformation.token;\n      this.isAuthenticated = true;\n      this.userId = authInformation.userId;\n      this.setAuthTimer(expiresIn / 1000);\n\n      this.authStatusListener.next(true);\n    }\n  }\n\n  logout() {\n    this.token = null;\n    this.isAuthenticated = false;\n    this.authStatusListener.next(false);\n    this.userId = null;\n    clearTimeout(this.tokenTimer);\n    this.clearAuthData();\n    this.router.navigate([\"/\"]);\n  }\n\n  private setAuthTimer(duration: number) {\n    console.log(`Setting timer: ${duration}`);\n    this.tokenTimer = setTimeout(() => {\n      this.logout();\n    }, duration * 1000);\n  }\n\n  private saveAuthData(token: string, expirationDate: Date, userId: string) {\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"userId\", userId);\n    localStorage.setItem(\"expiration\", expirationDate.toISOString());\n    console.log(userId);\n  }\n  private clearAuthData() {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expiration\");\n    localStorage.removeItem(\"userId\");\n  }\n\n  private getAuthData() {\n    const token = localStorage.getItem(\"token\");\n    const expirationDate = localStorage.getItem(\"expiration\");\n    const userId = localStorage.getItem(\"userId\");\n    if (!token || !expirationDate) {\n      return;\n    }\n    return {\n      token,\n      expirationDate: new Date(expirationDate),\n      userId,\n    };\n  }\n}\n","import { NgModule } from \"@angular/core\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatCardModule } from \"@angular/material/card\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\r\nimport { MatExpansionModule } from \"@angular/material/expansion\";\r\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\r\n\r\n@NgModule({\r\n  exports: [\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatProgressSpinnerModule,\r\n    MatPaginatorModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n  ],\r\n})\r\nexport class AngularMaterialModule {}\r\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute, ParamMap } from \"@angular/router\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { AuthService } from \"src/app/auth/auth.service\";\r\nimport { Post } from \"../post.model\";\r\nimport { PostsService } from \"../post.service\";\r\nimport { mimeType } from \"./mime-type.validator\";\r\n\r\n@Component({\r\n  selector: \"app-post-create\",\r\n  templateUrl: \"./post-create.component.html\",\r\n  styleUrls: [\"./post-create.component.css\"],\r\n})\r\nexport class PostCreateComponent implements OnInit, OnDestroy {\r\n  constructor(\r\n    public postsService: PostsService,\r\n    public route: ActivatedRoute,\r\n    private authService: AuthService\r\n  ) {}\r\n  enteredTitle = \"\";\r\n  enteredContent = \"\";\r\n  private mode = \"create\";\r\n  private postId: string;\r\n  public post: Post;\r\n  isLoading = false;\r\n  form: FormGroup;\r\n  imagePreview: string | ArrayBuffer;\r\n  private authStatusSub: Subscription;\r\n\r\n  onImagePicked(event: Event) {\r\n    const file = (event.target as HTMLInputElement).files[0];\r\n    this.form.patchValue({ image: file });\r\n    this.form.get(\"image\").updateValueAndValidity();\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      this.imagePreview = reader.result;\r\n    };\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  onSavePost() {\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n    this.isLoading = true;\r\n    if (this.mode === \"create\") {\r\n      this.postsService.addPost(\r\n        this.form.value.title,\r\n        this.form.value.content,\r\n        this.form.value.image\r\n      );\r\n      this.form.reset();\r\n    } else {\r\n      this.postsService.updatePost(\r\n        this.postId,\r\n        this.form.value.title,\r\n        this.form.value.content,\r\n        this.form.value.image\r\n      );\r\n      this.form.reset();\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.authStatusSub = this.authService\r\n      .getAuthStatusListener()\r\n      .subscribe((authStatus) => {\r\n        this.isLoading = false;\r\n      });\r\n    this.form = new FormGroup({\r\n      title: new FormControl(null, {\r\n        validators: [Validators.required, Validators.minLength(3)],\r\n      }),\r\n      content: new FormControl(null, { validators: [Validators.required] }),\r\n      image: new FormControl(null, {\r\n        validators: [Validators.required],\r\n        asyncValidators: [mimeType],\r\n      }),\r\n    });\r\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\r\n      if (paramMap.has(\"postId\")) {\r\n        this.mode = \"edit\";\r\n        this.postId = paramMap.get(\"postId\");\r\n        this.isLoading = true;\r\n        this.postsService.getPost(this.postId).subscribe((postData) => {\r\n          this.isLoading = false;\r\n          this.post = {\r\n            _id: postData._id,\r\n            title: postData.title,\r\n            content: postData.content,\r\n            imagePath: postData.imagePath,\r\n            creator: postData.creator,\r\n          };\r\n          this.form.setValue({\r\n            title: this.post.title,\r\n            content: this.post.content,\r\n            image: this.post.imagePath,\r\n          });\r\n        });\r\n      } else {\r\n        this.mode = \"create\";\r\n        this.postId = null;\r\n      }\r\n    });\r\n  }\r\n  ngOnDestroy() {\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n  <form [formGroup]=\"form\" (submit)=\"onSavePost()\" *ngIf=\"!isLoading\">\r\n\r\n    <mat-form-field>\r\n      <input formControlName=\"title\" placeholder=\"Post Title\" matInput type=\" text\" name=\"title\">\r\n      <mat-error *ngIf=\"form.get('title').invalid\">Please enter a post title</mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field-control>\r\n      <button mat-stroked-button type=\"button\" (click)=\"filePicker.click()\">Pick Image</button>\r\n      <input type=\"file\" #filePicker (change)=\"onImagePicked($event)\">\r\n    </mat-form-field-control>\r\n    <div class=\"image-preview\" *ngIf=\"imagePreview !==''&& imagePreview && form.get('image').valid\">\r\n      <img [src]=\"imagePreview\" [alt]=\"form.value.title\">\r\n    </div>\r\n\r\n    <mat-form-field>\r\n      <textarea formControlName=\"content\" placeholder=\"Post Content\" matInput rows=\"5\" name=\"content\" z></textarea>\r\n      <mat-error *ngIf=\"form.get('content').invalid\">Please enter a post content</mat-error>\r\n\r\n    </mat-form-field>\r\n\r\n\r\n\r\n    <button type=\"submit\" mat-raised-button color=\"primary\">Save Post</button>\r\n\r\n\r\n  </form>\r\n</mat-card>\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}