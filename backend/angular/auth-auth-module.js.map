{"version":3,"sources":["./src/app/auth/auth-routing.module.ts","./src/app/auth/signup/signup.component.html","./src/app/auth/signup/signup.component.ts","./src/app/auth/auth.module.ts","./src/app/auth/login/login.component.html","./src/app/auth/login/login.component.ts"],"names":[],"mappings":"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","file":"auth-auth-module.js","sourcesContent":["import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { LoginComponent } from \"./login/login.component\";\r\nimport { SignupComponent } from \"./signup/signup.component\";\r\n\r\nconst routes: Routes = [\r\n  { path: \"login\", component: LoginComponent },\r\n  { path: \"signup\", component: SignupComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AuthRouthingModule {}\r\n","<mat-card>\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n  <form (submit)=\"onSignup(signupForm)\" #signupForm=\"ngForm\" *ngIf=\"!isLoading\">\n\n    <mat-form-field>\n      <input placeholder=\"Email\" #emailInput=\"ngModel\" matInput type=\" email\" name=\"email\" ngModel required email>\n      <mat-error *ngIf=\"emailInput.invalid\">Please enter a valid email</mat-error>\n    </mat-form-field>\n\n    <mat-form-field>\n      <input type=\"password\" matInput placeholder=\"password\" name=\"password\" #passInput=\"ngModel\" ngModel required>\n      <mat-error *ngIf=\"passInput.invalid\">Please enter a valid password</mat-error>\n\n    </mat-form-field>\n\n\n\n    <button type=\"submit\" mat-raised-button color=\"primary\">Signup</button>\n\n\n  </form>\n</mat-card>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { Subscription } from \"rxjs\";\nimport { AuthService } from \"../auth.service\";\n\n@Component({\n  selector: \"app-signup\",\n  templateUrl: \"./signup.component.html\",\n  styleUrls: [\"./signup.component.css\"],\n})\nexport class SignupComponent implements OnInit, OnDestroy {\n  constructor(public authService: AuthService) {}\n  isLoading = false;\n  private authStatusSub: Subscription;\n\n  onSignup(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    this.authService.createUser(form.value.email, form.value.password);\n  }\n\n  ngOnInit(): void {\n    this.authStatusSub = this.authService\n      .getAuthStatusListener()\n      .subscribe((authStatus) => {\n        this.isLoading = false;\n      });\n  }\n  ngOnDestroy() {\n    this.authStatusSub.unsubscribe();\n  }\n}\n","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { AngularMaterialModule } from \"../angular-material.module\";\r\nimport { LoginComponent } from \"./login/login.component\";\r\nimport { SignupComponent } from \"./signup/signup.component\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { AuthRouthingModule } from \"./auth-routing.module\";\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent, SignupComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AngularMaterialModule,\r\n    FormsModule,\r\n    AuthRouthingModule,\r\n  ],\r\n})\r\nexport class AuthModule {}\r\n","<mat-card>\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n  <form (submit)=\"onLogin(loginForm)\" #loginForm=\"ngForm\" *ngIf=\"!isLoading\">\n\n    <mat-form-field>\n      <input placeholder=\"Email\" #emailInput=\"ngModel\" matInput type=\" email\" name=\"email\" ngModel required email>\n      <mat-error *ngIf=\"emailInput.invalid\">Please enter a valid email</mat-error>\n    </mat-form-field>\n\n    <mat-form-field>\n      <input type=\"password\" matInput placeholder=\"password\" name=\"password\" #passInput=\"ngModel\" ngModel required>\n      <mat-error *ngIf=\"passInput.invalid\">Please enter a valid password</mat-error>\n\n    </mat-form-field>\n\n\n\n    <button type=\"submit\" mat-raised-button color=\"primary\">Login</button>\n\n\n  </form>\n</mat-card>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { Subscription } from \"rxjs\";\nimport { AuthService } from \"../auth.service\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.css\"],\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  constructor(public authService: AuthService) {}\n  isLoading = false;\n  private authStatusSub: Subscription;\n\n  onLogin(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    this.authService.login(form.value.email, form.value.password);\n  }\n\n  ngOnInit(): void {\n    this.authStatusSub = this.authService\n      .getAuthStatusListener()\n      .subscribe((authStatus) => {\n        this.isLoading = false;\n      });\n  }\n  ngOnDestroy() {\n    this.authStatusSub.unsubscribe();\n  }\n}\n"],"sourceRoot":"webpack:///"}